name: Create Tag & Bump Version

on:
  push:
    tags:
      - "*"
jobs:
  bump-version:
    if: ${{ startsWith(github.event.head_commit.message, 'chore(release):') }}
    runs-on: ubuntu-latest
    name: "Bump version and create changelog with standard version"
    steps:
      - name: Check out
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: "${{ secrets.PERSONAL_ACCESS_TOKEN }}"
      - name: Git config
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
      - name: Create bump and changelog
        run: npx capacitor-standard-version
      - name: Push to origin
        run: |
          CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
          remote_repo="https://${GITHUB_ACTOR}:${{ secrets.PERSONAL_ACCESS_TOKEN }}@github.com/${GITHUB_REPOSITORY}.git"
          git pull $remote_repo $CURRENT_BRANCH

# jobs:
#   release:
#     permissions:
#       contents: write
#       issues: write
#       pull-requests: write
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3
#       - name: Setup Node
#         uses: actions/setup-node@v3
#         with:
#           node-version: lts/*
#       - name: Authenticate NPM
#         run: echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" > ~/.npmrc
#       - name: Cache
#         id: node-modules
#         uses: actions/cache@v3
#         env:
#           cache-name: node-modules
#         with:
#           path: node_modules
#           key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
#           restore-keys: |
#             ${{ runner.os }}-build-${{ env.cache-name }}-
#             ${{ runner.os }}-build-
#             ${{ runner.os }}-
#       - name: Install Dependencies
#         if: steps.node-modules.outputs.cache-hit != 'true'
#         run: |
#           npm config set legacy-peer-deps true
#           npm ci
#       - name: Run semantic-release
#         run: npx semantic-release
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
